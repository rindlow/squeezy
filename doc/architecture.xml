<mxGraphModel dx="1626" dy="800" grid="1" guides="1" tooltips="1" connect="1" fold="1" page="1" pageScale="1" pageWidth="826" pageHeight="1169" style="default-style2"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="2" value="eventHandler&#xa;FSM" style="shape=process;whiteSpace=wrap" vertex="1" parent="1"><mxGeometry x="300" y="140" width="120" height="60" as="geometry"/></mxCell><mxCell id="3" value="DiscoveryServer&#xa;UDP 3843" style="whiteSpace=wrap" vertex="1" parent="1"><mxGeometry x="50" y="130" width="120" height="60" as="geometry"/></mxCell><mxCell id="4" value="clientHandler" style="whiteSpace=wrap" vertex="1" parent="1"><mxGeometry x="130" y="340" width="120" height="60" as="geometry"/></mxCell><mxCell id="5" value="SqueezeBox" style="rounded=1;whiteSpace=wrap" vertex="1" parent="1"><mxGeometry x="110" y="450" width="80" height="20" as="geometry"/></mxCell><mxCell id="8" value="" style="endArrow=none;exitX=0.5;exitY=0;entryX=0.5;entryY=1" edge="1" parent="1" source="5" target="4"><mxGeometry relative="1" as="geometry"/></mxCell><mxCell id="9" value="clientHandler" style="whiteSpace=wrap" vertex="1" parent="1"><mxGeometry x="280" y="340" width="120" height="60" as="geometry"/></mxCell><mxCell id="10" value="SqueezeBox" style="rounded=1;whiteSpace=wrap" vertex="1" parent="1"><mxGeometry x="260" y="450" width="80" height="20" as="geometry"/></mxCell><mxCell id="11" value="" style="endArrow=none;exitX=0.5;exitY=0;entryX=0.5;entryY=1" edge="1" source="10" target="9" parent="1"><mxGeometry relative="1" as="geometry"/></mxCell><mxCell id="12" value="CHAN" style="endArrow=none;exitX=0.5;exitY=0;entryX=0.5;entryY=1" edge="1" parent="1" source="4" target="2"><mxGeometry relative="1" as="geometry"/></mxCell><mxCell id="13" value="CHAN" style="endArrow=none;exitX=0.5;exitY=0;entryX=0.5;entryY=1" edge="1" parent="1" source="9" target="2"><mxGeometry relative="1" as="geometry"/></mxCell><mxCell id="14" value="StreamServer&#xa;TCP 9000" style="whiteSpace=wrap" vertex="1" parent="1"><mxGeometry x="520" y="140" width="120" height="60" as="geometry"/></mxCell><mxCell id="15" value="CHAN" style="endArrow=none;exitX=1;exitY=0.5;entryX=0;entryY=0.5" edge="1" parent="1" source="2" target="14"><mxGeometry relative="1" as="geometry"/></mxCell><mxCell id="16" value="Runs the Discovery&#xa;protocol autonomously" style="text;spacingTop=-5;" vertex="1" parent="1"><mxGeometry x="50" y="190" width="120" height="30" as="geometry"/></mxCell><mxCell id="17" value="One clientHandler is started for each&#xa;client that connects with SlimProto. The&#xa;clientHandler listens for incoming TCP&#xa;messages from the client and incoming&#xa;state messages from the eventHandler&#xa;as well as sending the same." style="text;spacingTop=-5;" vertex="1" parent="1"><mxGeometry x="405" y="340" width="235" height="100" as="geometry"/></mxCell><mxCell id="19" value="The StreamServer accepts&#xa;incoming HTTO requests&#xa;and starts a Handler for&#xa;each of them. The handler&#xa;gets instructions from the&#xa;EventHandler on which&#xa;track to stream to which&#xa;player. The players supply&#xa;their MAC as a GET param." style="text;spacingTop=-5;" vertex="1" parent="1"><mxGeometry x="650" y="140" width="160" height="140" as="geometry"/></mxCell><mxCell id="20" value="The eventHandler keeps a state for each known player&#xa;/indexed in MAC address) and contains a state engine&#xa;with transitions and actions. Events are received on&#xa;the chans from the clientHander (e.g. key pressed on&#xa;remote) or the StreamServer (e.g. EOF reached for current&#xa;track). In the future there will be a web-interface chan." style="text;spacingTop=-5;" vertex="1" parent="1"><mxGeometry x="215" y="21" width="325" height="100" as="geometry"/></mxCell><mxCell id="21" value="" style="line" vertex="1" parent="1"><mxGeometry y="490" width="820" height="10" as="geometry"/></mxCell><mxCell id="22" value="* A SqueezeBox starts and uses Disovery to find the server&#xa;* The SqueezeBox connects with SlimProto, a clientHandler is started&#xa;* The clientHandler runs HELO with player, notifies evenHandler over chan&#xa;* The eventHandler creates/update the state for the player&#xa;* The player connects to the StreamServer&#xa;* The StreamServer notifies the eventHandler that the player has connected&#xa;* The player sends a request for a track, clientHandler notifies eventHandler&#xa;* The eventHandler notifies StreamServer to start streaming&#xa;* The eventHandler notifies clientHandler that the streaming has started&#xa;* The clientHandler notifies the SqueezeBox that streaming has started" style="text;spacingTop=-5;" vertex="1" parent="1"><mxGeometry x="50" y="520" width="500" height="150" as="geometry"/></mxCell></root></mxGraphModel>